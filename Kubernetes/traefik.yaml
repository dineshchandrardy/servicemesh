kind: ServiceAccount
apiVersion: v1
metadata:
  name: traefik
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch     
  - apiGroups:
      - extensions
    resources:
      - ingresses
      - ingresses/status
    verbs:
      - update
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount 
  name: traefik
  namespace: default  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik
  labels:
    app: traefik
data:
  traefik.toml: |
    logLevel = "INFO"
    InsecureSkipVerify = true
    defaultEntryPoints = ["http","https"]
    
    # HTTP entrypoint
    [entryPoints]
    [entryPoints.http]
    address = ":80"
    compress = true
 
    # HTTPS entrypoint
   # [entryPoints.https]
   # address = ":443"
   # compress = true

   # [entryPoints.https.tls]
    #[[entryPoints.https.tls.certificates]]
    #CertFile = "/ssl/app.wlgore.com.crt"
    #KeyFile = "/ssl/app.wlgore.com.key"
 
    # API entrypoint for health monitoring and dashboard
    [entryPoints.api]
    address = ":8080"
 
    # Access logs
    [accessLog]
    format = "common"
 
    [api]
    entryPoint = "api"
    [kubernetes]
    ingressClass = "traefik"
    [traefikLog]
    format = "json"
    [ping]
    entryPoint = "api"
    
# config map is an api object used to store non-confidential data in key-value pairs.  Pods can consume ConfigMaps as environment variables, command-line arguments, or as configuration files in a volume.
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik  
    spec:
     serviceAccountName: traefik
     terminationGracePeriodSeconds: 60
     containers:
        - image: traefik:v1.7.24
          name: traefik
          volumeMounts:
           - mountPath: /config
             name: config
            #- mountPath: /ssl
            #  name: ssl
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
           # - name: api
           #  containerPort: 8080
          args:
             - --configfile=/config/traefik.toml         
     volumes:
        - name: config
          configMap:
           name: traefik    
        # - name: ssl
        #  secret:
        #    secretName: traefik-default-cert
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
  labels:
    app: traefik
spec:
  type: NodePort
  selector:
    app: traefik
  ports:
  - name: http
    port: 80
    nodePort: 30080
    targetPort: 80
  - name: https
    port: 443
    nodePort: 30090
    